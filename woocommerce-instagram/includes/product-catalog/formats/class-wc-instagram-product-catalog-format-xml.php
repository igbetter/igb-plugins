<?php
/**
 * A class for rendering a product catalog in an XML format.
 *
 * @package WC_Instagram/Product_Catalog/Formats
 * @since   3.0.0
 */

defined( 'ABSPATH' ) || exit;

if ( ! class_exists( 'WC_Instagram_Product_Catalog_Format', false ) ) {
	include_once 'abstract-class-wc-instagram-product-catalog-format.php';
}

/**
 * WC_Instagram_Product_Catalog_Format_XML class.
 */
class WC_Instagram_Product_Catalog_Format_XML extends WC_Instagram_Product_Catalog_Format {

	/**
	 * The format used to render the product catalog.
	 *
	 * @var string
	 */
	protected $format = 'xml';

	/**
	 * Gets the formatted product catalog.
	 *
	 * @since 3.0.0
	 *
	 * @return string
	 */
	public function get_output() {
		$output = $this->get_output_start();

		$product_items = $this->get_product_items();

		foreach ( $product_items as $product_item ) {
			$output .= $this->get_output_item( $product_item );
		}

		$output .= $this->get_output_end();

		return $output;
	}

	/**
	 * Gets the starting content of the formatted product catalog.
	 *
	 * @since 4.0.0
	 *
	 * @return string
	 */
	public function get_output_start() {
		$title       = '[' . get_option( 'blogname' ) . '] ' . $this->get_product_catalog()->get_title();
		$description = $this->get_product_catalog()->get_title() . ' RSS feed';

		$output  = '<?xml version="1.0" encoding="' . esc_attr( $this->get_charset() ) . '"?>' . "\n";
		$output .= '<rss xmlns:g="http://base.google.com/ns/1.0" version="2.0">' . "\n";
		$output .= "\t<channel>\n";
		$output .= "\t\t<title>" . esc_html( $title ) . "</title>\n";
		$output .= "\t\t<link>" . esc_url( home_url( '/' ) ) . "</link>\n";
		$output .= "\t\t<description>" . esc_html( $description ) . "</description>\n";

		return $output;
	}

	/**
	 * Gets the ending content of the formatted product catalog.
	 *
	 * @since 4.0.0
	 *
	 * @return string
	 */
	public function get_output_end() {
		$created_at = gmdate( 'Y-m-d H:i' );

		$output  = "\t</channel>\n";
		$output .= '</rss>';
		$output .= "\n<!-- XML Product Catalog generated by WooCommerce Instagram. Last updated: {$created_at} (UTC) -->";

		return $output;
	}

	/**
	 * Gets the formatted 'item' XML node.
	 *
	 * @since 3.0.0
	 * @since 4.0.0 Set method visibility to public.
	 *
	 * @param WC_Instagram_Product_Catalog_Item $product_item A catalog item.
	 * @return string
	 */
	public function get_output_item( $product_item ) {
		$values = $this->get_formatted_item( $product_item );

		if ( empty( $values ) ) {
			return '';
		}

		$item  = "\t\t<item>\n";
		$props = $this->get_item_props();

		foreach ( $values as $key => $value ) {
			$cdata = ( 'esc_html' === $props[ $key ] );

			if ( is_array( $value ) ) {
				foreach ( $value as $array_value ) {
					$item .= $this->get_output_item_prop( $key, $array_value, $cdata );
				}
			} else {
				$item .= $this->get_output_item_prop( $key, $value, $cdata );
			}
		}

		$item .= "\t\t</item>\n";

		return $item;
	}

	/**
	 * Gets the formatted item prop.
	 *
	 * @since 3.2.0
	 *
	 * @param string $key   The property key.
	 * @param string $value The property value.
	 * @param bool   $cdata Optional. Wrap the value with a CDATA block?. Default: false.
	 * @return string
	 */
	protected function get_output_item_prop( $key, $value, $cdata = false ) {
		if ( $cdata ) {
			$value = "<![CDATA[{$value}]]>";
		}

		return sprintf(
			"\t\t\t" . '<g:%1$s>%2$s</g:%1$s>' . "\n",
			esc_attr( $key ),
			$value
		);
	}

	/**
	 * Gets the formatted catalog item.
	 *
	 * @since 3.0.0
	 *
	 * @param WC_Instagram_Product_Catalog_Item $product_item The catalog item.
	 * @return array
	 */
	protected function get_formatted_item( $product_item ) {
		$values = parent::get_formatted_item( $product_item );
		$values = array_filter( $values );

		/*
		 * Remove unnecessary 'sale_price' data.
		 * Case: Grouped product with a product on sale.
		 */
		if ( isset( $values['sale_price'] ) && $values['sale_price'] === $values['price'] ) {
			unset( $values['sale_price'], $values['sale_price_effective_date'] );
		}

		return $values;
	}

	/**
	 * Gets the formatted 'channel' XML node.
	 *
	 * @since 3.0.0
	 * @deprecated 4.0.0
	 *
	 * @return string
	 */
	protected function get_output_channel() {
		wc_deprecated_function( __FUNCTION__, '4.0.0' );

		$title       = '[' . get_option( 'blogname' ) . '] ' . $this->get_product_catalog()->get_title();
		$description = $this->get_product_catalog()->get_title() . ' RSS feed';

		$channel  = "\t<channel>\n";
		$channel .= "\t\t<title>" . esc_html( $title ) . "</title>\n";
		$channel .= "\t\t<link>" . esc_url( home_url( '/' ) ) . "</link>\n";
		$channel .= "\t\t<description>" . esc_html( $description ) . "</description>\n";

		$product_items = $this->get_product_items();

		foreach ( $product_items as $product_item ) {
			$channel .= $this->get_output_item( $product_item );
		}

		$channel .= "\t</channel>\n";

		return $channel;
	}
}
